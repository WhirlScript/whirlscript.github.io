import{_ as e,o as t,c as a,Q as o}from"./chunks/framework.jBbNkKut.js";const m=JSON.parse('{"title":"模块","description":"","frontmatter":{"prev":{"text":"命名空间","link":"/zh/guide/getting-started/namespace"},"next":{"text":"目标限定符","link":"/zh/guide/getting-started/target-specifier"}},"headers":[],"relativePath":"zh/guide/getting-started/modules.md","filePath":"zh/guide/getting-started/modules.md"}'),s={name:"zh/guide/getting-started/modules.md"},l=o('<h1 id="模块" tabindex="-1">模块 <a class="header-anchor" href="#模块" aria-label="Permalink to &quot;模块&quot;">​</a></h1><p>WhirlScript 程序可以被拆分为多个按需导入的单独模块。这也是其包管理的前提。</p><div class="tip custom-block"><p class="custom-block-title">小贴士</p><p>建议在作为模块的文件中，将所有定义置于命名空间中，防止导入后污染命名空间。</p></div><h2 id="导入模块" tabindex="-1">导入模块 <a class="header-anchor" href="#导入模块" aria-label="Permalink to &quot;导入模块&quot;">​</a></h2><p>使用 <code>#import</code> 语句导入一个模块。</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#import &quot;./module&quot;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#import &quot;./module&quot;;</span></span></code></pre></div><p>导入的模块实际上是一个 <code>.wrs</code> 文件。你需要使用相对路径（以 <code>./</code> 开头）来导入项目目录中的文件。</p><p>导入语句需要在最外层。即，你不能在函数、分支等语句内部导入一个模块。</p><p>导入实际上是字符串的简单拼接。因此，导入的文件中的所有内容都会被作为此文件的一部分被解析。</p><p>重复导入是安全的。第二次导入同一个模块会被忽略。</p><h2 id="导入-whirlpool-包" tabindex="-1">导入 Whirlpool 包 <a class="header-anchor" href="#导入-whirlpool-包" aria-label="Permalink to &quot;导入 Whirlpool 包&quot;">​</a></h2><p>Whirlpool 提供了各种第三方包。你可以通过 <code>$ wrp add $pkg</code> 安装到当前项目，然后使用 <code>#import</code> 语句导入：</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#import &quot;hello&quot;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#import &quot;hello&quot;;</span></span></code></pre></div><p>对于提供了可选导入的包，你可以通过这种方式导入：</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#import &quot;hello/hello&quot;;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#import &quot;hello/hello&quot;;</span></span></code></pre></div>',15),p=[l];function i(c,r,d,n,h,u){return t(),a("div",null,p)}const _=e(s,[["render",i]]);export{m as __pageData,_ as default};
