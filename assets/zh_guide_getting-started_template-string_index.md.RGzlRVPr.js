import{_ as s,o as a,c as e,Q as t}from"./chunks/framework.jBbNkKut.js";const E=JSON.parse('{"title":"模板字符串","description":"","frontmatter":{"prev":{"text":"表达式与运算符","link":"/zh/guide/getting-started/expressions-and-operators"},"next":{"text":"结构体","link":"/zh/guide/getting-started/struct"}},"headers":[],"relativePath":"zh/guide/getting-started/template-string/index.md","filePath":"zh/guide/getting-started/template-string.md"}'),n={name:"zh/guide/getting-started/template-string/index.md"},p=t('<h1 id="模板字符串" tabindex="-1">模板字符串 <a class="header-anchor" href="#模板字符串" aria-label="Permalink to &quot;模板字符串&quot;">​</a></h1><p><strong>模板字符串</strong>是用反引号（<code>`</code>）包裹的字符串，允许<strong>多行字符串</strong>、带嵌入表达式的<strong>字符串插值</strong>的特殊结构。</p><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h2><p>模板字符串用反引号（<code>`</code>）包裹，可以包含插值————一种由美元符号和大括号分隔的嵌入式表达式：<code>${expression}</code>。</p><p>例如：</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">`12</span></span>\n<span class="line"><span style="color:#E1E4E8;">3`;</span></span>\n<span class="line"><span style="color:#E1E4E8;">`1 + 1 = ${1 + 1}`;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">`12</span></span>\n<span class="line"><span style="color:#24292E;">3`;</span></span>\n<span class="line"><span style="color:#24292E;">`1 + 1 = ${1 + 1}`;</span></span></code></pre></div><p>若要转义模板字符串中的反引号（<code>`</code>），需在反引号之前加一个反斜杠（<code>\\</code>）。同样的，为了转义，美元符号 <code>$</code> 来防止插值，也可以使用反斜杠转义：</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">`\\`` == &quot;`&quot;; // true</span></span>\n<span class="line"><span style="color:#E1E4E8;">`\\${1}` == &quot;${1}&quot;; // true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">`\\`` == &quot;`&quot;; // true</span></span>\n<span class="line"><span style="color:#24292E;">`\\${1}` == &quot;${1}&quot;; // true</span></span></code></pre></div><p>模板字符串可以跨行和嵌套：</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">`1 + 1 = ?</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">${`1 + 1 = ${1 + 1}`}`;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">`1 + 1 = ?</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">${`1 + 1 = ${1 + 1}`}`;</span></span></code></pre></div>',10),o=[p];function l(c,i,r,d,h,g){return a(),e("div",null,o)}const _=s(n,[["render",l]]);export{E as __pageData,_ as default};
