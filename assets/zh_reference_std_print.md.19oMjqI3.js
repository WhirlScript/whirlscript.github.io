import{_ as e,o as t,c as a,Q as o}from"./chunks/framework.jBbNkKut.js";const f=JSON.parse('{"title":"print 函数","description":"","frontmatter":{"prev":false,"next":false},"headers":[],"relativePath":"zh/reference/std/print.md","filePath":"zh/reference/std/print.md"}'),r={name:"zh/reference/std/print.md"},s=o('<h1 id="print-函数" tabindex="-1"><code>print</code> 函数 <a class="header-anchor" href="#print-函数" aria-label="Permalink to &quot;`print` 函数&quot;">​</a></h1><p><code>print()</code> 用于输出至控制台。其变体 <code>println()</code> 会在输出后加上一个换行。</p><div class="info custom-block"><p class="custom-block-title">小贴士</p><p>如果不是特别需要，最好使用 <code>println()</code> 而不是 <code>print()</code></p></div><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h2><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">print(&quot;test&quot;);// 输出 test</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">print(&quot;test&quot;);// 输出 test</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><h4 id="x" tabindex="-1"><code>x</code> <a class="header-anchor" href="#x" aria-label="Permalink to &quot;`x`&quot;">​</a></h4><p>字符串类型的输出值。</p><h3 id="返回值" tabindex="-1">返回值 <a class="header-anchor" href="#返回值" aria-label="Permalink to &quot;返回值&quot;">​</a></h3><p>没有返回值。</p>',10),n=[s];function i(c,p,l,d,h,_){return t(),a("div",null,n)}const m=e(r,[["render",i]]);export{f as __pageData,m as default};
