import{_ as s,o as a,c as n,Q as t}from"./chunks/framework.jBbNkKut.js";const u=JSON.parse('{"title":"Target Specification","description":"","frontmatter":{"prev":{"text":"Namespace","link":"/guide/getting-started/namespace"},"next":{"text":"Annotation","link":"/guide/getting-started/annotation"}},"headers":[],"relativePath":"guide/getting-started/target-specify/index.md","filePath":"guide/getting-started/target-specify.md"}'),o={name:"guide/getting-started/target-specify/index.md"},e=t(`<h1 id="target-specification" tabindex="-1">Target Specification <a class="header-anchor" href="#target-specification" aria-label="Permalink to &quot;Target Specification&quot;">â€‹</a></h1><p>In certain situations, you may want a piece of code to exist only in specific compilation targets.</p><p>The simplest way is to add <code>@sh</code> or <code>@bat</code> annotations before the statement.</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@sh </span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello SH!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">@bat </span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello BAT!&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@sh </span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello SH!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">@bat </span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello BAT!&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>For blocks of statements, you can specify them like this:</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@sh {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;SH only block.&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">@bat {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;BAT only block.&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@sh {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;SH only block.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">@bat {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;BAT only block.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>For more information about annotations, see <a href="/guide/getting-started/annotation">Annotation</a>.</p>`,7),p=[e];function l(c,i,r,E,y,d){return a(),n("div",null,p)}const h=s(o,[["render",l]]);export{u as __pageData,h as default};
