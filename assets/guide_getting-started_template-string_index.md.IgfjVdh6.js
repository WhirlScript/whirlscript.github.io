import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.jBbNkKut.js";const E=JSON.parse('{"title":"Template String","description":"","frontmatter":{"prev":{"text":"Expressions and Operators","link":"/en/guide/getting-started/expressions-and-operators"},"next":{"text":"Struct","link":"/en/guide/getting-started/struct"}},"headers":[],"relativePath":"guide/getting-started/template-string/index.md","filePath":"guide/getting-started/template-string.md"}'),p={name:"guide/getting-started/template-string/index.md"},t=e('<h1 id="template-string" tabindex="-1">Template String <a class="header-anchor" href="#template-string" aria-label="Permalink to &quot;Template String&quot;">​</a></h1><p><strong>Template string</strong> is a string wrapped in backticks (<code>`</code>), allowing special structures for <strong>multiline strings</strong> and <strong>string interpolation</strong> with embedded expressions.</p><h2 id="syntax" tabindex="-1">Syntax <a class="header-anchor" href="#syntax" aria-label="Permalink to &quot;Syntax&quot;">​</a></h2><p>Template strings are wrapped in backticks (<code>`</code>) and may contain interpolation, an embedded expression separated by a dollar sign and braces: <code>${expression}</code>.</p><p>For example:</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">`12</span></span>\n<span class="line"><span style="color:#9ECBFF;">3`</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#9ECBFF;">`1 + 1 = ${</span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">}`</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">`12</span></span>\n<span class="line"><span style="color:#032F62;">3`</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#032F62;">`1 + 1 = ${</span><span style="color:#005CC5;">1</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">}`</span><span style="color:#24292E;">;</span></span></code></pre></div><p>To escape a backtick (<code>`</code>) in a template string, precede the backtick with a backslash (<code>\\</code>). Likewise, for escaping, the dollar sign <code>$</code> to prevent interpolation can also be escaped with a backslash:</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">`</span><span style="color:#79B8FF;">\\`</span><span style="color:#9ECBFF;">`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;`&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// true</span></span>\n<span class="line"><span style="color:#9ECBFF;">`</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">{1}`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;${1}&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">`</span><span style="color:#005CC5;">\\`</span><span style="color:#032F62;">`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;`&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// true</span></span>\n<span class="line"><span style="color:#032F62;">`</span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">{1}`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;${1}&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// true</span></span></code></pre></div><p>Template strings can be multiline and nested:</p><div class="language-WhirlScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">WhirlScript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">`1 + 1 = ?</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9ECBFF;">${`1 + 1 = ${</span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;"> </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">}`}`</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">`1 + 1 = ?</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#032F62;">${`1 + 1 = ${</span><span style="color:#005CC5;">1</span><span style="color:#032F62;"> </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">}`}`</span><span style="color:#24292E;">;</span></span></code></pre></div>',10),l=[t];function o(r,c,i,d,y,F){return a(),n("div",null,l)}const h=s(p,[["render",o]]);export{E as __pageData,h as default};
